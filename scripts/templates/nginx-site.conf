upstream jutut {
  server unix:$run_path/gunicorn.sock;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server ipv6only=on;
  server_name $fqdn;
  underscores_in_headers on;

  location / {
    return 302 https://$$server_name$$request_uri;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl ipv6only=on;
  server_name $fqdn;
  underscores_in_headers on;

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_certificate $nginx_cert_path;
  ssl_certificate_key $nginx_key_path;
  ssl_dhparam $nginx_dhparams_path;

  # ssl ciphers (use: https://mozilla.github.io/server-side-tls/ssl-config-generator/)
  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;


  # cache ssl session
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  error_page 404 /static/err_404.html;
  error_page 500 502 504 /static/err_500.html;
  error_page 503 /static/err_503.html;

  location /static {
    alias $dest/static;
  }
  location /media {
    alias $dest/media;
  }
  location / {
    if (-f $dest/maintenance_enabled) {
      return 503;
    }
    proxy_pass_header Server;
    proxy_set_header Host $$http_host;
    proxy_set_header X-Real-IP $$remote_addr;
    proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $$scheme;
    proxy_redirect off;
    proxy_connect_timeout 10;
    proxy_read_timeout 30;
    proxy_pass http://jutut;
  }
}
